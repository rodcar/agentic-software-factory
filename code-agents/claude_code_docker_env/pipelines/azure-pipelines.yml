# Azure Pipeline configuration - updated on June 10, 2024
trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # You can set a specific Test Plan ID directly without needing to look it up
  - name: testPlanId
    value: '$(System.TeamProjectId)'  # Replace with your actual Test Plan ID once you know it

stages:
- stage: Test
  jobs:
  - job: RunTests
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.9'
        addToPath: true
      displayName: 'Use Python 3.9'
    
    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'
    
    - script: |
        export PYTHONPATH=$(System.DefaultWorkingDirectory)
        mkdir -p $(System.DefaultWorkingDirectory)/TestResults
        # The --junit-prefix adds the TC prefix to help with test name mapping
        # Results will be in JUnit XML format for Azure DevOps to process
        pytest tests/ -v --junitxml=$(System.DefaultWorkingDirectory)/TestResults/test-results.xml
      displayName: 'Run tests'
    
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/test-results.xml'
        testRunTitle: 'Test Run'
        mergeTestResults: true
        publishRunAttachments: true
        testRunSystem: 'Azure Pipelines'
        failTaskOnFailedTests: true
        testCaseNameFormat: '{testNameWithoutPrefix}'
        testPlanId: '$(testPlanId)'  
      displayName: 'Publish test results to Azure Test Plans'
    
    - task: CopyFiles@2
      inputs:
        contents: 'TestResults/**'
        targetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copy test results to artifact staging directory'
    
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'test-results'
      displayName: 'Publish test results artifacts' 